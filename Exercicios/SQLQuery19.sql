SELECT * FROM [NOTAS FISCAIS] WHERE CPF = '7771579779'

CREATE FUNCTION ListaNotasCliente (@CPF AS VARCHAR(11))
RETURNS TABLE
AS
RETURN SELECT * FROM [NOTAS FISCAIS] WHERE CPF = @CPF

SELECT COUNT(*) FROM [dbo].[ListaNotasCliente]('1471156710')

--####################################################

CREATE PROCEDURE CalculaIdade
AS
BEGIN
 UPDATE [TABELA DE CLIENTES] SET IDADE = DATEDIFF(YEAR, [DATA DE NASCIMENTO], GETDATE())
END


INSERT INTO [TABELA DE CLIENTES]
(CPF, NOME, [ENDERECO 1], BAIRRO, CIDADE, ESTADO, CEP, [DATA DE NASCIMENTO], IDADE, SEXO, [LIMITE DE CREDITO], [VOLUME DE COMPRA], [PRIMEIRA COMPRA])
VALUES
('123123123', 'JOAO MACHADO', 'RUA PROJETADA A', 'MADUREIRA', 'Rio de Janeiro', 'RJ', '20000', '2000-01-01', 10, 'M', 12000, 12000, 1)

SELECT * FROM [TABELA DE CLIENTES] WHERE CPF = '123123123'

EXEC [dbo].[CalculaIdade]

--#####################################################
CREATE PROCEDURE BuscaNotasCliente
@CPF AS VARCHAR(12) = '19290992743',
@DATA_INICIAL AS DATETIME = '20160101',
@DATA_FINAL AS DATETIME = '20161231'
AS
BEGIN
   SELECT * FROM [NOTAS FISCAIS] WHERE CPF = @CPF
   AND DATA >= @DATA_INICIAL AND DATA <= @DATA_FINAL
END;

EXEC BuscaNotasCliente;


--##############################


CREATE PROCEDURE retornaValoresFaturamentoQuantidade
@CPF AS VARCHAR(12), 
@ANO AS INT, 
@NUM_NOTAS AS INT OUTPUT, 
@FATURAMENTO AS FLOAT OUTPUT
AS
BEGIN
	SELECT @NUM_NOTAS = COUNT(*) FROM [NOTAS FISCAIS]
	WHERE CPF = @CPF AND YEAR([DATA]) = @ANO

	
	SELECT @FATURAMENTO = SUM(INF.QUANTIDADE * INF.[PREÇO])
	FROM [ITENS NOTAS FISCAIS] INF
	INNER JOIN [NOTAS FISCAIS] NF
	ON INF.NUMERO = NF.NUMERO
	WHERE NF.CPF = @CPF AND YEAR(NF.[DATA]) = @ANO
END;

DECLARE @NUM_NOTAS INT;
DECLARE @FATURAMENTO FLOAT;
SET @NUM_NOTAS = 0;
SET @FATURAMENTO = 0;

SELECT @NUM_NOTAS, @FATURAMENTO;

EXEC retornaValoresFaturamentoQuantidade 
@CPF='19290992743', @ANO=2017, 
@NUM_NOTAS=@NUM_NOTAS OUTPUT, 
@FATURAMENTO=@FATURAMENTO OUTPUT;

SELECT @NUM_NOTAS, @FATURAMENTO;

EXEC sp_helpdb;


--####################
-- relatório com dados de vendas, por datas, 
-- olhando pela perspectiva destes novos departamentos.
-- passando como parâmetros a data inicial e final

CREATE PROCEDURE faturamentoDepartamento (@dataInicial DATE, @dataFinal DATE)
AS
BEGIN
	DECLARE @DEPARTAMENTO TABLE (SABOR VARCHAR(20), DEPARTAMENTO VARCHAR(20))

	INSERT INTO @DEPARTAMENTO 
	SELECT DISTINCT SABOR, 'FRUTAS NÃO CÍTRICAS' as DEPARTAMENTO 
	FROM [TABELA DE PRODUTOS] 
	WHERE SABOR IN ('Açai','Cereja','Cereja/Maça','Maça','Manga','Maracujá','Melância')

	UNION

	SELECT DISTINCT SABOR, 'FRUTAS CÍTRICAS' as DEPARTAMENTO 
	FROM [TABELA DE PRODUTOS] 
	WHERE SABOR IN ('Laranja','Uva','Limão','Morango','Morango/Limão','Lima/Limão')
	
	SELECT DP.[DEPARTAMENTO] , SUM(INF.QUANTIDADE * INF.[PREÇO]) AS FATURAMENTO
	FROM [TABELA DE PRODUTOS] TP
	INNER JOIN [ITENS NOTAS FISCAIS] INF
	ON TP.[CODIGO DO PRODUTO] = INF.[CODIGO DO PRODUTO]
	INNER JOIN [NOTAS FISCAIS] NF
	ON NF.NUMERO = INF.NUMERO
	INNER JOIN @DEPARTAMENTO DP
	ON TP.SABOR = DP.SABOR
	WHERE NF.DATA >= @dataInicial AND NF.DATA <= @dataFinal
	GROUP BY DP.[DEPARTAMENTO]
END;
exec faturamentoDepartamento '2016-01-01','2016-01-15';



--###########

SELECT * FROM [NOTAS FISCAIS]
WHERE NUMERO = 100;

SELECT SABOR, SUM(QUANTIDADE * [PREÇO]) AS FATURAMENTO
FROM [ITENS NOTAS FISCAIS]
INNER JOIN [NOTAS FISCAIS]
ON [ITENS NOTAS FISCAIS].NUMERO = [NOTAS FISCAIS].NUMERO
INNER JOIN [TABELA DE PRODUTOS]
ON [ITENS NOTAS FISCAIS].[CODIGO DO PRODUTO] = [TABELA DE PRODUTOS].[CODIGO DO PRODUTO]
WHERE [NOTAS FISCAIS].DATA > '2015-01-01' AND [NOTAS FISCAIS].DATA < '2015-12-30'
GROUP BY SABOR;
