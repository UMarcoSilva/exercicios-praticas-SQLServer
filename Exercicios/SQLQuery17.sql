
IF OBJECT_ID('TABELA_TESTE', 'U') IS NOT NULL DROP TABLE TABELA_TESTE;
IF OBJECT_ID('TABELA_TESTE', 'U') IS NULL CREATE TABLE TABELA_TESTE(ID VARCHAR(10));


SELECT GETDATE();

SELECT DATENAME(WEEKDAY, GETDATE());
SELECT GETDATE(), DATEADD(DAY, 5, GETDATE());
SELECT DATENAME(WEEKDAY, DATEADD(DAY, 7, GETDATE()));

DECLARE @DIA_SEMANA VARCHAR(20);
DECLARE @NUMERO_DIAS INT;

SET @NUMERO_DIAS = 9;
SET @DIA_SEMANA = DATENAME(WEEKDAY, DATEADD(DAY, @NUMERO_DIAS, GETDATE()));

PRINT @DIA_SEMANA;

IF @DIA_SEMANA = 'Domingo' OR @DIA_SEMANA = 'Sábado'
	PRINT 'Este dia é fim de semana';
ELSE
	PRINT 'Este dia é dia de semana';

--###########################################

DECLARE @CPF VARCHAR(15);
DECLARE @DATA_NASCIMENTO DATE;
DECLARE @IDADE INT;
DECLARE @IDADE_TABELA INT;

SET @CPF = '1471156710';
SELECT @DATA_NASCIMENTO = [DATA DE NASCIMENTO], @IDADE_TABELA = IDADE FROM [TABELA DE CLIENTES] WHERE CPF = @CPF;
SET @IDADE = DATEDIFF(YEAR, @DATA_NASCIMENTO, GETDATE());
IF @IDADE_TABELA <> @IDADE UPDATE [TABELA DE CLIENTES] SET IDADE = @IDADE WHERE CPF = @CPF;

SELECT NOME, IDADE FROM [TABELA DE CLIENTES] WHERE CPF = @CPF;



--##########################
DECLARE @LIMITE_MAX FLOAT;
DECLARE @LIMITE_ATUAL FLOAT;
DECLARE @BAIRRO VARCHAR(20);

SET @LIMITE_MAX = 50000;
SET @BAIRRO = 'Água Santa';

SELECT @LIMITE_ATUAL = SUM([LIMITE DE CREDITO]) 
FROM [TABELA DE CLIENTES] WHERE BAIRRO = @BAIRRO;
IF @LIMITE_MAX <= @LIMITE_ATUAL
	PRINT 'Valor estorou';
ELSE	
	PRINT 'Valor não estorou';
	
--SELECT DENTRO DE IF
DECLARE @LIMITE_MAXIMO FLOAT;
DECLARE @BAIRRO VARCHAR(20);

SET @LIMITE_MAXIMO = 50000;
SET @BAIRRO = 'Água Santa';
IF @LIMITE_MAXIMO <= (SELECT SUM([LIMITE DE CREDITO]) FROM [TABELA DE CLIENTES] WHERE BAIRRO = @BAIRRO)
    PRINT 'VALOR ESTOUROU';
ELSE
    PRINT 'VALOR NÃO ESTOUROU';

--########################################

DECLARE @CPF VARCHAR(15);
DECLARE @DATA_NASCIMENTO DATE;
DECLARE @IDADE INT;
SET @CPF = '1471156710';

SELECT @DATA_NASCIMENTO = [DATA DE NASCIMENTO] FROM [TABELA DE CLIENTES] WHERE CPF = @CPF;
SET @IDADE = DATEDIFF(YEAR, @DATA_NASCIMENTO, GETDATE());
IF (SELECT COUNT(*) FROM  [TABELA DE CLIENTES] WHERE CPF = @CPF AND IDADE <> @IDADE) = 1 
    UPDATE [TABELA DE CLIENTES] SET IDADE = @IDADE WHERE CPF = @CPF;

--################################################
DECLARE @LIMITE_MINIMO INT;
DECLARE @LIMITE_MAXIMO INT;

SET @LIMITE_MINIMO = 3;
SET @LIMITE_MAXIMO = 30;

PRINT 'ENTREI NO LOOPING';
WHILE @LIMITE_MINIMO <= @LIMITE_MAXIMO
BEGIN
    PRINT @LIMITE_MINIMO;
    SET @LIMITE_MINIMO = @LIMITE_MINIMO + 1;
END;
PRINT 'SAI DO LOOPING';

--#################################
DECLARE @DATAINICIAL DATE
DECLARE @DATAFINAL DATE
DECLARE @NUMNOTAS INT
SET @DATAINICIAL = '20170101'
SET @DATAFINAL = '20170110'
WHILE @DATAINICIAL <= @DATAFINAL
BEGIN
	SELECT @NUMNOTAS = COUNT(*) FROM [NOTAS FISCAIS] 
		WHERE DATA = @DATAINICIAL
    PRINT CONVERT(VARCHAR(10), @DATAINICIAL) + ' --> ' 
        + CONVERT(VARCHAR(10), @NUMNOTAS)
    SELECT @DATAINICIAL = DATEADD(DAY, 1, @DATAINICIAL)
END


SELECT NUMERO, DATA FROM [NOTAS FISCAIS];



--##################
DECLARE @NUMERO_ANTERIOR2 INT;
DECLARE @NUMERO_ANTERIOR1 INT;
DECLARE @NUMERO_ATUAL INT;
DECLARE @SEQUENCIA INT;
DECLARE @CONTADOR_SEQUENCIA INT;

SET @SEQUENCIA = 44;
SET @CONTADOR_SEQUENCIA = 3;

SET @NUMERO_ANTERIOR2 = 0;
SET @NUMERO_ANTERIOR1 = 1;
PRINT 'POSIÇÃO 1 --> 0';
PRINT 'POSIÇÃO 2 --> 1';
WHILE @CONTADOR_SEQUENCIA <= @SEQUENCIA
BEGIN
   SET @NUMERO_ATUAL = @NUMERO_ANTERIOR2 + @NUMERO_ANTERIOR1;
   PRINT 'POSIÇÃO ' + TRIM(STR(@CONTADOR_SEQUENCIA,10,0)) + ' --> ' + TRIM(STR(@NUMERO_ATUAL, 10,0));
   SET  @NUMERO_ANTERIOR2 = @NUMERO_ANTERIOR1;
   SET @NUMERO_ANTERIOR1 = @NUMERO_ATUAL;
   SET @CONTADOR_SEQUENCIA = @CONTADOR_SEQUENCIA + 1;
END;

--##########################################
IF OBJECT_ID('TABELA DE NUMEROS', 'u') IS NOT NULL DROP TABLE [TABELA DE NUMEROS];
CREATE TABLE [TABELA DE NUMEROS] ([NUMERO] INT, [STATUS] VARCHAR(20));

DECLARE @NUMERO_INICIAL_SEQUENCIA INT, @NUMERO_FINAL_SEQUENCIA INT;
DECLARE @TESTE_NOTA_FISCAL INT;
SET @NUMERO_INICIAL_SEQUENCIA = 1;
SET @NUMERO_FINAL_SEQUENCIA = 200;

WHILE @NUMERO_INICIAL_SEQUENCIA <= @NUMERO_FINAL_SEQUENCIA
BEGIN
        SELECT @TESTE_NOTA_FISCAL = COUNT(*) FROM [NOTAS FISCAIS] WHERE 
        NUMERO = @NUMERO_INICIAL_SEQUENCIA;
        IF @TESTE_NOTA_FISCAL = 1
             INSERT INTO [TABELA DE NUMEROS] ([NUMERO, [STATUS]) 
             VALUES (@NUMERO_INICIAL_SEQUENCIA, 'É NOTA FISCAL');
        ELSE
             INSERT INTO [TABELA DE NUMEROS] ([NUMERO, [STATUS]) 
             VALUES (@NUMERO_INICIAL_SEQUENCIA, 'NÃO É NOTA FISCAL');
        SET @NUMERO_INICIAL_SEQUENCIA = @NUMERO_INICIAL_SEQUENCIA + 1;
END;

--############################
IF OBJECT_ID('TABELA DE NOTAS PERIODO', 'u') IS NOT NULL DROP TABLE [TABELA DE NUMEROS];
CREATE TABLE [TABELA DE NOTAS PERIODO] ([NUMERO] INT, [DATA] DATE);

DECLARE @DATAINICIAL DATE
DECLARE @DATAFINAL DATE
DECLARE @NUMNOTAS INT
SET @DATAINICIAL = '20170101'
SET @DATAFINAL = '20170110'

WHILE @DATAINICIAL <= @DATAFINAL
BEGIN
    SELECT @NUMNOTAS = COUNT(*) FROM [NOTAS FISCAIS] 
        WHERE DATA = @DATAINICIAL
    PRINT CONVERT(VARCHAR(10), @DATAINICIAL) + ' --> ' 
        + CONVERT(VARCHAR(10), @NUMNOTAS)
	INSERT INTO [TABELA DE NOTAS PERIODO] (NUMERO, DATA) 
	VALUES (@NUMNOTAS, @DATAINICIAL) 
    SELECT @DATAINICIAL = DATEADD(DAY, 1, @DATAINICIAL)
END

SELECT * FROM [TABELA DE NOTAS PERIODO];

--##################

SET I = 1;
WHILE I <= 100
BEGIN
    <COMANDOS>
    SET I = I + 1;
END;





